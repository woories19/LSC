---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Dylan Malandain.
--- DateTime: 20/12/2019 19:07
---

print("^1 RageUI - testing file is started. ^0")

local mainMenu = RageUI.CreateMenu("Los Santos Customs", "Categories")
local ArmorsubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Armor")
local BrakessubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Brakes")
local EnginesubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Engine")
local HornsubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Horn")
local LightssubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Lights")
local PlatesubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Plate")
local RespraysubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Respray")
local SuspensionsubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Suspension")
local TransmissionsubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Transmission")
local TurbosubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Turbo")
local WheelssubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Wheels")
local WindowsubMenu =  RageUI.CreateSubMenu(mainMenu, "Los Santos Customs", "Window Tint")

-- Paint Types
local MetallicsubMenu = RageUI.CreateSubMenu(RespraysubMenu, "Los Santos Customs", "Metallic Paint")
local MattesubMenu = RageUI.CreateSubMenu(RespraysubMenu, "Los Santos Customs", "Matte Paint")
local MetalssubMenu = RageUI.CreateSubMenu(RespraysubMenu, "Los Santos Customs", "Metals Paint")

-- Main Menu Properties
mainMenu:DisplayGlare(false)
mainMenu:SetPosition(1450, 1)
mainMenu.Closed = function()
    print('Closed Showcase Menu')
end
mainMenu.EnableMouse = false
mainMenu.onIndexChange = function(Index)

end

-- Sub Menu Properties
ArmorsubMenu:DisplayGlare(true)
ArmorsubMenu:SetPosition(1450, 1)
ArmorsubMenu:DisplayPageCounter(true)
ArmorsubMenu.EnableMouse = false

BrakessubMenu:DisplayGlare(true)
BrakessubMenu:SetPosition(1450, 1)
BrakessubMenu:DisplayPageCounter(true)
BrakessubMenu.EnableMouse = false

EnginesubMenu:DisplayGlare(true)
EnginesubMenu:SetPosition(1450, 1)
EnginesubMenu:DisplayPageCounter(true)
EnginesubMenu.EnableMouse = false

HornsubMenu:DisplayGlare(true)
HornsubMenu:SetPosition(1450, 1)
HornsubMenu:DisplayPageCounter(true)
HornsubMenu.EnableMouse = false

LightssubMenu:DisplayGlare(true)
LightssubMenu:SetPosition(1450, 1)
LightssubMenu:DisplayPageCounter(true)
LightssubMenu.EnableMouse = false

PlatesubMenu:DisplayGlare(true)
PlatesubMenu:SetPosition(1450, 1)
PlatesubMenu:DisplayPageCounter(true)
PlatesubMenu.EnableMouse = false

RespraysubMenu:DisplayGlare(true)
RespraysubMenu:SetPosition(1450, 1)
RespraysubMenu:DisplayPageCounter(true)
RespraysubMenu.EnableMouse = false

SuspensionsubMenu:DisplayGlare(true)
SuspensionsubMenu:SetPosition(1450, 1)
SuspensionsubMenu:DisplayPageCounter(true)
SuspensionsubMenu.EnableMouse = false

TransmissionsubMenu:DisplayGlare(true)
TransmissionsubMenu:SetPosition(1450, 1)
TransmissionsubMenu:DisplayPageCounter(true)
TransmissionsubMenu.EnableMouse = false

TurbosubMenu:DisplayGlare(true)
TurbosubMenu:SetPosition(1450, 1)
TurbosubMenu:DisplayPageCounter(true)
TurbosubMenu.EnableMouse = false

WheelssubMenu:DisplayGlare(true)
WheelssubMenu:SetPosition(1450, 1)
WheelssubMenu:DisplayPageCounter(true)
WheelssubMenu.EnableMouse = false

WindowsubMenu:DisplayGlare(true)
WindowsubMenu:SetPosition(1450, 1)
WindowsubMenu:DisplayPageCounter(true)
WindowsubMenu.EnableMouse = false

-- Paint Types
MetallicsubMenu:DisplayGlare(true)
MetallicsubMenu:SetPosition(1450, 1)
MetallicsubMenu:DisplayPageCounter(true)
MetallicsubMenu.EnableMouse = false

MattesubMenu:DisplayGlare(true)
MattesubMenu:SetPosition(1450, 1)
MattesubMenu:DisplayPageCounter(true)
MattesubMenu.EnableMouse = false

MetalssubMenu:DisplayGlare(true)
MetalssubMenu:SetPosition(1450, 1)
MetalssubMenu:DisplayPageCounter(true)
MetalssubMenu.EnableMouse = false

local index = {
    checkbox = false,
    highend = 1,
    sport = 2,
    muscle = 3,
    tuner = 4,
}

-- GetVehicleProperties Function

function GetVehicleProperties(vehicle)
	if DoesEntityExist(vehicle) then
		local colorPrimary, colorSecondary = GetVehicleColours(vehicle)
		local pearlescentColor, wheelColor = GetVehicleExtraColours(vehicle)
		local extras = {}

		for extraId=0, 12 do
			if DoesExtraExist(vehicle, extraId) then
				local state = IsVehicleExtraTurnedOn(vehicle, extraId) == 1
				extras[tostring(extraId)] = state
			end
		end

		return {
			model             = GetEntityModel(vehicle),

			plate             = GetVehicleNumberPlateText(vehicle),
			plateIndex        = GetVehicleNumberPlateTextIndex(vehicle),

			bodyHealth        = GetVehicleBodyHealth(vehicle),
			engineHealth      = GetVehicleEngineHealth(vehicle),
			tankHealth        = GetVehiclePetrolTankHealth(vehicle),

			fuelLevel         = GetVehicleFuelLevel(vehicle),
			dirtLevel         = GetVehicleDirtLevel(vehicle),
			color1            = colorPrimary,
			color2            = colorSecondary,

			pearlescentColor  = pearlescentColor,
			wheelColor        = wheelColor,

			wheels            = GetVehicleWheelType(vehicle),
			windowTint        = GetVehicleWindowTint(vehicle),
			xenonColor        = GetVehicleXenonLightsColour(vehicle),

			neonEnabled       = {
				IsVehicleNeonLightEnabled(vehicle, 0),
				IsVehicleNeonLightEnabled(vehicle, 1),
				IsVehicleNeonLightEnabled(vehicle, 2),
				IsVehicleNeonLightEnabled(vehicle, 3)
			},

			neonColor         = table.pack(GetVehicleNeonLightsColour(vehicle)),
			extras            = extras,
			tyreSmokeColor    = table.pack(GetVehicleTyreSmokeColor(vehicle)),

			modSpoilers       = GetVehicleMod(vehicle, 0),
			modFrontBumper    = GetVehicleMod(vehicle, 1),
			modRearBumper     = GetVehicleMod(vehicle, 2),
			modSideSkirt      = GetVehicleMod(vehicle, 3),
			modExhaust        = GetVehicleMod(vehicle, 4),
			modFrame          = GetVehicleMod(vehicle, 5),
			modGrille         = GetVehicleMod(vehicle, 6),
			modHood           = GetVehicleMod(vehicle, 7),
			modFender         = GetVehicleMod(vehicle, 8),
			modRightFender    = GetVehicleMod(vehicle, 9),
			modRoof           = GetVehicleMod(vehicle, 10),

			modEngine         = GetVehicleMod(vehicle, 11),
			modBrakes         = GetVehicleMod(vehicle, 12),
			modTransmission   = GetVehicleMod(vehicle, 13),
			modHorns          = GetVehicleMod(vehicle, 14),
			modSuspension     = GetVehicleMod(vehicle, 15),
			modArmor          = GetVehicleMod(vehicle, 16),

			modTurbo          = IsToggleModOn(vehicle, 18),
			modSmokeEnabled   = IsToggleModOn(vehicle, 20),
			modXenon          = IsToggleModOn(vehicle, 22),

			modFrontWheels    = GetVehicleMod(vehicle, 23),
			modBackWheels     = GetVehicleMod(vehicle, 24),

			modPlateHolder    = GetVehicleMod(vehicle, 25),
			modVanityPlate    = GetVehicleMod(vehicle, 26),
			modTrimA          = GetVehicleMod(vehicle, 27),
			modOrnaments      = GetVehicleMod(vehicle, 28),
			modDashboard      = GetVehicleMod(vehicle, 29),
			modDial           = GetVehicleMod(vehicle, 30),
			modDoorSpeaker    = GetVehicleMod(vehicle, 31),
			modSeats          = GetVehicleMod(vehicle, 32),
			modSteeringWheel  = GetVehicleMod(vehicle, 33),
			modShifterLeavers = GetVehicleMod(vehicle, 34),
			modAPlate         = GetVehicleMod(vehicle, 35),
			modSpeakers       = GetVehicleMod(vehicle, 36),
			modTrunk          = GetVehicleMod(vehicle, 37),
			modHydrolic       = GetVehicleMod(vehicle, 38),
			modEngineBlock    = GetVehicleMod(vehicle, 39),
			modAirFilter      = GetVehicleMod(vehicle, 40),
			modStruts         = GetVehicleMod(vehicle, 41),
			modArchCover      = GetVehicleMod(vehicle, 42),
			modAerials        = GetVehicleMod(vehicle, 43),
			modTrimB          = GetVehicleMod(vehicle, 44),
			modTank           = GetVehicleMod(vehicle, 45),
			modWindows        = GetVehicleMod(vehicle, 46),
			modLivery         = GetVehicleLivery(vehicle)
		}
	else
		return
	end
end

-- SetVehicleProperties Function

SetVehicleProperties = function(vehicle, props)
	if DoesEntityExist(vehicle) then
		local colorPrimary, colorSecondary = GetVehicleColours(vehicle)
		local pearlescentColor, wheelColor = GetVehicleExtraColours(vehicle)
		SetVehicleModKit(vehicle, 0)

		if props.plate then SetVehicleNumberPlateText(vehicle, props.plate) end
		if props.plateIndex then SetVehicleNumberPlateTextIndex(vehicle, props.plateIndex) end
		if props.bodyHealth then SetVehicleBodyHealth(vehicle, props.bodyHealth + 0.0) end
		if props.engineHealth then SetVehicleEngineHealth(vehicle, props.engineHealth + 0.0) end
		if props.tankHealth then SetVehiclePetrolTankHealth(vehicle, props.tankHealth + 0.0) end
		if props.fuelLevel then SetVehicleFuelLevel(vehicle, props.fuelLevel + 0.0) end
		if props.dirtLevel then SetVehicleDirtLevel(vehicle, props.dirtLevel + 0.0) end
		if props.color1 then SetVehicleColours(vehicle, props.color1, colorSecondary) end
		if props.color2 then SetVehicleColours(vehicle, props.color1 or colorPrimary, props.color2) end
		if props.pearlescentColor then SetVehicleExtraColours(vehicle, props.pearlescentColor, wheelColor) end
		if props.wheelColor then SetVehicleExtraColours(vehicle, props.pearlescentColor or pearlescentColor, props.wheelColor) end
		if props.wheels then SetVehicleWheelType(vehicle, props.wheels) end
		if props.windowTint then SetVehicleWindowTint(vehicle, props.windowTint) end

		if props.neonEnabled then
			SetVehicleNeonLightEnabled(vehicle, 0, props.neonEnabled[1])
			SetVehicleNeonLightEnabled(vehicle, 1, props.neonEnabled[2])
			SetVehicleNeonLightEnabled(vehicle, 2, props.neonEnabled[3])
			SetVehicleNeonLightEnabled(vehicle, 3, props.neonEnabled[4])
		end

		if props.extras then
			for extraId,enabled in pairs(props.extras) do
				if enabled then
					SetVehicleExtra(vehicle, tonumber(extraId), 0)
				else
					SetVehicleExtra(vehicle, tonumber(extraId), 1)
				end
			end
		end

		if props.neonColor then SetVehicleNeonLightsColour(vehicle, props.neonColor[1], props.neonColor[2], props.neonColor[3]) end
		if props.xenonColor then SetVehicleXenonLightsColour(vehicle, props.xenonColor) end
		if props.modSmokeEnabled then ToggleVehicleMod(vehicle, 20, true) end
		if props.tyreSmokeColor then SetVehicleTyreSmokeColor(vehicle, props.tyreSmokeColor[1], props.tyreSmokeColor[2], props.tyreSmokeColor[3]) end
		if props.modSpoilers then SetVehicleMod(vehicle, 0, props.modSpoilers, false) end
		if props.modFrontBumper then SetVehicleMod(vehicle, 1, props.modFrontBumper, false) end
		if props.modRearBumper then SetVehicleMod(vehicle, 2, props.modRearBumper, false) end
		if props.modSideSkirt then SetVehicleMod(vehicle, 3, props.modSideSkirt, false) end
		if props.modExhaust then SetVehicleMod(vehicle, 4, props.modExhaust, false) end
		if props.modFrame then SetVehicleMod(vehicle, 5, props.modFrame, false) end
		if props.modGrille then SetVehicleMod(vehicle, 6, props.modGrille, false) end
		if props.modHood then SetVehicleMod(vehicle, 7, props.modHood, false) end
		if props.modFender then SetVehicleMod(vehicle, 8, props.modFender, false) end
		if props.modRightFender then SetVehicleMod(vehicle, 9, props.modRightFender, false) end
		if props.modRoof then SetVehicleMod(vehicle, 10, props.modRoof, false) end
		if props.modEngine then SetVehicleMod(vehicle, 11, props.modEngine, false) end
		if props.modBrakes then SetVehicleMod(vehicle, 12, props.modBrakes, false) end
		if props.modTransmission then SetVehicleMod(vehicle, 13, props.modTransmission, false) end
		if props.modHorns then SetVehicleMod(vehicle, 14, props.modHorns, false) end
		if props.modSuspension then SetVehicleMod(vehicle, 15, props.modSuspension, false) end
		if props.modArmor then SetVehicleMod(vehicle, 16, props.modArmor, false) end
		if props.modTurbo then ToggleVehicleMod(vehicle,  18, props.modTurbo) end
		if props.modXenon then ToggleVehicleMod(vehicle,  22, props.modXenon) end
		if props.modFrontWheels then SetVehicleMod(vehicle, 23, props.modFrontWheels, false) end
		if props.modBackWheels then SetVehicleMod(vehicle, 24, props.modBackWheels, false) end
		if props.modPlateHolder then SetVehicleMod(vehicle, 25, props.modPlateHolder, false) end
		if props.modVanityPlate then SetVehicleMod(vehicle, 26, props.modVanityPlate, false) end
		if props.modTrimA then SetVehicleMod(vehicle, 27, props.modTrimA, false) end
		if props.modOrnaments then SetVehicleMod(vehicle, 28, props.modOrnaments, false) end
		if props.modDashboard then SetVehicleMod(vehicle, 29, props.modDashboard, false) end
		if props.modDial then SetVehicleMod(vehicle, 30, props.modDial, false) end
		if props.modDoorSpeaker then SetVehicleMod(vehicle, 31, props.modDoorSpeaker, false) end
		if props.modSeats then SetVehicleMod(vehicle, 32, props.modSeats, false) end
		if props.modSteeringWheel then SetVehicleMod(vehicle, 33, props.modSteeringWheel, false) end
		if props.modShifterLeavers then SetVehicleMod(vehicle, 34, props.modShifterLeavers, false) end
		if props.modAPlate then SetVehicleMod(vehicle, 35, props.modAPlate, false) end
		if props.modSpeakers then SetVehicleMod(vehicle, 36, props.modSpeakers, false) end
		if props.modTrunk then SetVehicleMod(vehicle, 37, props.modTrunk, false) end
		if props.modHydrolic then SetVehicleMod(vehicle, 38, props.modHydrolic, false) end
		if props.modEngineBlock then SetVehicleMod(vehicle, 39, props.modEngineBlock, false) end
		if props.modAirFilter then SetVehicleMod(vehicle, 40, props.modAirFilter, false) end
		if props.modStruts then SetVehicleMod(vehicle, 41, props.modStruts, false) end
		if props.modArchCover then SetVehicleMod(vehicle, 42, props.modArchCover, false) end
		if props.modAerials then SetVehicleMod(vehicle, 43, props.modAerials, false) end
		if props.modTrimB then SetVehicleMod(vehicle, 44, props.modTrimB, false) end
		if props.modTank then SetVehicleMod(vehicle, 45, props.modTank, false) end
		if props.modWindows then SetVehicleMod(vehicle, 46, props.modWindows, false) end

		if props.modLivery then
			SetVehicleMod(vehicle, 48, props.modLivery, false)
			SetVehicleLivery(vehicle, props.modLivery)
		end
	end
end

RegisterNetEvent('loadvehMods')
AddEventHandler('loadvehMods', function(vehmods)
    local mods = json.decode (vehmods)
    RequestModel(mods.model)
    while not HasModelLoaded(mods.model) do
        Wait(1)
    end
    local coords = GetOffsetFromEntityInWorldCoords(GetPlayerPed(-1), 0, 5.0, 0)
    local spawned_car = CreateVehicle(mods.model, coords, GetEntityHeading(PlayerPedId()), true, false)
    SetVehicleProperties(spawned_car, mods)
end)

Citizen.CreateThread(function()
    while (true) do
        Citizen.Wait(1)

        RageUI.IsVisible(mainMenu, function()
            
            -- Repair Car   
            if IsPedInAnyVehicle(PlayerPedId(), false) then
                local EngHealth = GetVehicleEngineHealth(GetVehiclePedIsIn(PlayerPedId(), false))
                if EngHealth <1000 then
                    print ("Vehicle Health Low")
                    RageUI.Button('Repair Car', nil, { RightLabel = "", Color = { HightLightColor = { 155, 0, 0, 150 }, BackgroundColor = { 38, 85, 150, 160 } }}, true, {
                        onSelected = function()
                            SetVehicleFixed(GetVehiclePedIsIn(PlayerPedId()))
                            SetVehicleEngineHealth(GetVehiclePedIsIn(PlayerPedId()), 1000.0)
                        end});
                else
                    RageUI.Button('Repair Car', nil, { RightLabel = "", Color = { HightLightColor = { 0, 155, 0, 150 }, BackgroundColor = { 38, 85, 150, 160 } }}, true, {
                    onSelected = function()
                            
                    end});
                end
            end
            -- Armor
            RageUI.Button('Armor', nil, {}, true, {onSelected = function()
            
            
            end}, ArmorsubMenu);
            -- Brakes
            RageUI.Button('Brakes', nil, {}, true, {onSelected = function()
            
            
            end}, BrakessubMenu);
            -- Engine
            RageUI.Button('Engine', nil, {}, true, {onSelected = function()
            
            
            end}, EnginesubMenu);
            -- Horn
            RageUI.Button('Horn', nil, {}, true, {onSelected = function()
            
            
            end}, HornsubMenu);
            -- Lights
            RageUI.Button('Lights', nil, {}, true, {onSelected = function()
            
            
            end}, LightssubMenu);

            -- Plate
            RageUI.Button('Plate', nil, {}, true, {onSelected = function()
            
            
            end}, PlatesubMenu);

            -- Respray
            RageUI.Button('Respray', nil, {}, true, {onSelected = function()
                

            end}, RespraysubMenu);

            -- Suspension
            RageUI.Button('Suspension', nil, {}, true, {onSelected = function()
            
            
            end}, SuspensionsubMenu);

            -- Transmission
            RageUI.Button('Transmission', nil, {}, true, {onSelected = function()
            
            
            end}, TransmissionsubMenu);

            -- Turbo
            RageUI.Button('Turbo', nil, {}, true, {onSelected = function()
            
            
            end}, TurbosubMenu);

            -- Wheels
            RageUI.Button('Wheels', nil, {}, true, {onSelected = function()
            
            
            end}, WheelssubMenu);

            -- Window Tint
            RageUI.Button('Window Tint', nil, {}, true, {onSelected = function()
            
            
            end}, WindowsubMenu);

            RageUI.Separator("Save/Load Vehicle")
            
            -- Save Vehicle
            RageUI.Button('Save Vehicle', nil, {}, true, {
                onSelected = function()
                    local vehProps = GetVehicleProperties(GetVehiclePedIsIn(PlayerPedId()))
                    TriggerServerEvent('savevehProps', vehProps)
                end,
            });

            RageUI.Button('Load Vehicle', nil, {}, true, {
                onSelected = function()
                    TriggerServerEvent('getvehProps')
                end,
            });
        end)

        --> ArmorsubMenu : 
        RageUI.IsVisible(ArmorsubMenu, function()
            
            RageUI.Button('No Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, -1, false)
                end,
            });
            RageUI.Button('20% Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, 0, false)
                end,
            });
            RageUI.Button('40% Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, 1, false)
                end,
            });
            RageUI.Button('60% Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, 2, false)
                end,
            });
            RageUI.Button('80% Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, 3, false)
                end,
            });
            RageUI.Button('100% Armor', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 16, 4, false)
                end,
            });

            
        end, function() end)
        -- BrakessubMenu
        RageUI.IsVisible(BrakessubMenu, function()
            
            RageUI.Button('Standard Brakes', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 12, -1, false)
                end,
            });
            RageUI.Button('Street Brakes', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 12, 0, false)
                end,
            });
            RageUI.Button('Sport Brakes', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 12, 1, false)
                end,
            });
            RageUI.Button('Race Brakes', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 12, 2, false)
                end,
            });

            
        end, function() end)
        -- EnginesubMenu
        RageUI.IsVisible(EnginesubMenu, function()
            
            RageUI.Button('Standard Engine', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 11, -1, false)
                end,
            });
            RageUI.Button('EMS-Improvement 1', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 11, 0, false)
                end,
            });
            RageUI.Button('EMS-Improvement 2', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 11, 1, false)
                end,
            });
            RageUI.Button('EMS-Improvement 3', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 11, 2, false)
                end,
            });
            RageUI.Button('EMS-Improvement 4', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 11, 3, false)
                end,
            });
            
        end, function() end)
        -- HornsubMenu
        RageUI.IsVisible(HornsubMenu, function()
            
            RageUI.Button('Stock Horn', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, -1, false)
                end,
            });
            RageUI.Button('Truck Horn', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, 0, false)
                end,
            });
            RageUI.Button('Police Horn', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, 1, false)
                end,
            });
            RageUI.Button('Clown Horn', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, 2, false)
                end,
            });
            RageUI.Button('Classical Loop 1', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, 32, false)
                end,
            });
            RageUI.Button('Classical Loop 2', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 14, 34, false)
                end,
            });

        end, function() end)
        -- LightssubMenu
        RageUI.IsVisible(LightssubMenu, function()
            
            RageUI.Button('Standard Headlights', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 22, -1, false)
                    ToggleVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 22, false)
                end,
            });
            RageUI.Button('Xenon Headlights', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 22, 0, false)
                    ToggleVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 22, true)
                end,
            });
            
        end, function() end)
        -- PlatesubMenu
        RageUI.IsVisible(PlatesubMenu, function()
            
            RageUI.Button('Blue on White 1', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleNumberPlateTextIndex(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                end,
            });
            RageUI.Button('Blue on White 2', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleNumberPlateTextIndex(GetVehiclePedIsIn(PlayerPedId(), false), 4)
                end,
            });
            RageUI.Button('Yellow on Blue', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleNumberPlateTextIndex(GetVehiclePedIsIn(PlayerPedId(), false), 2)
                end,
            });
            RageUI.Button('Yellow on Black', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleNumberPlateTextIndex(GetVehiclePedIsIn(PlayerPedId(), false), 1)
                end,
            });
            
        end, function() end)

        -- RespraysubMenu
        RageUI.IsVisible(RespraysubMenu, function()
            
            RageUI.Button('Metallic', nil, {}, true, {onSelected = function()
                
            
            end}, MetallicsubMenu);

            RageUI.Button('Matte', nil, {}, true, {onSelected = function()
            
            
            end}, MattesubMenu);

            RageUI.Button('Metals', nil, {}, true, {onSelected = function()
            
            
            end}, MetalssubMenu);
        end, function() end)
        
        -- RespraysubMenu - MetallicsubMenu    
        RageUI.IsVisible(MetallicsubMenu, function()

            RageUI.Button('Black', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 0, 0)
                end,
            });

            RageUI.Button('Red', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 27, 27)
                end,
            });
            RageUI.Button('Green', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 53, 53)
                end,
            });
            RageUI.Button('Blue', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 64, 64)
                end,
            });

        end, function() end)

        -- RespraysubMenu - MattesubMenu    
        RageUI.IsVisible(MattesubMenu, function()

            RageUI.Button('Black', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 12, 12)
                end,
            });

            RageUI.Button('Red', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 39, 39)
                end,
            });
            RageUI.Button('Green', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 128, 128)
                end,
            });
            RageUI.Button('Blue', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 83, 83)
                end,
            });

        end, function() end)

        -- RespraysubMenu - MetalssubMenu    
        RageUI.IsVisible(MetalssubMenu, function()

            RageUI.Button('Brushed Steel', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 117, 117)
                end,
            });

            RageUI.Button('Brushed Black steel', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 118, 118)
                end,
            });
            RageUI.Button('Pure Gold', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 158, 158)
                end,
            });
            RageUI.Button('Brushed Gold', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleColours(GetVehiclePedIsIn(PlayerPedId(), false), 159, 159)
                end,
            });

        end, function() end)

        -- SuspensionsubMenu
        RageUI.IsVisible(SuspensionsubMenu, function()
            
            RageUI.Button('Standard Suspension', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 15, -1, false)
                end,
            });
            RageUI.Button('Lowered Suspension', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 15, 0, false)
                end,
            });
            RageUI.Button('Street Suspension', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 15, 1, false)
                end,
            });
            RageUI.Button('Sport Suspension', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 15, 2, false)
                end,
            });
            RageUI.Button('Race Suspension', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 15, 3, false)
                end,
            });
            
        end, function() end)

        -- TransmissionsubMenu
        RageUI.IsVisible(TransmissionsubMenu, function()
            
            RageUI.Button('Standard Transmission', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 13, -1, false)
                end,
            });
            RageUI.Button('Street Transmission', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 13, 0, false)
                end,
            });
            RageUI.Button('Sport Transmission', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 13, 1, false)
                end,
            });
            RageUI.Button('Race Transmission', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 13, 2, false)
                end,
            });
            
        end, function() end)
        -- TurbosubMenu
        RageUI.IsVisible(TurbosubMenu, function()
            
            RageUI.Button('None', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 18, -1, false)
                    ToggleVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 18, false)
                end,
            });
            RageUI.Button('Turbo Tuning', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 18, 0, false)
                    ToggleVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 18, true)
                end,
            });
            
        end, function() end)
        -- WheelssubMenu
        RageUI.IsVisible(WheelssubMenu, function()
            
            RageUI.Checkbox('Checkbox', description, index.checkbox, {}, {
                onChecked = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 23, modIndex, true)
                end,
                onUnChecked = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 23, modIndex, false)
                end,
                onSelected = function(Index)
                    index.checkbox = Index
                end
            })
            
            RageUI.Button('Turbo Tuning', nil, {}, true, {
                onSelected = function()
                    
                end,
            });
            
            -- High End Wheels
            RageUI.List('High End', {
                { Name = "Stock", Value = -1 },
                { Name = "Shadow", Value = 21 },
                { Name = "Hypher", Value = 22 },
                { Name = "Blade", Value = 23 },
                { Name = "Diamond", Value = 24 },
                { Name = "Supa Gee", Value = 25 },
                { Name = "Chromatic Z", Value = 26 },
                { Name = "Mercie Ch.Lip", Value = 27 },
                { Name = "Obey RS", Value = 28 },
                { Name = "GT Chrome", Value = 29 },
                { Name = "Cheetah RR", Value = 30 },
                { Name = "Solar", Value = 31 },
                { Name = "Split Ten", Value = 32 },
                { Name = "Dash VIP", Value = 33 },
                { Name = "LozSpeed Ten", Value = 34 },
                { Name = "Carbon Inferno", Value = 35 },
                { Name = "Carbon Shadow", Value = 36 },
                { Name = "Carbonic Z", Value = 37 },
                { Name = "Carbon Solar", Value = 38 },
                { Name = "Cheetah Carbon R", Value = 39 },
                { Name = "Carbon S Racer", Value = 40 },
            }, index.highend, description, {}, true, {
                onListChange = function(Index, Item)
                    index.highend = Index;
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleMod(GetVehiclePedIsIn(PlayerPedId(), false), 23, Item.Value, false)
                end,
                onSelected = function(Index, Item)
                    
                end,
            })
            -- Sports Wheels
            RageUI.List('Sport', {
                { Name = "Paco", Value = 1 },
                { Name = "Is", Value = 2 },
                { Name = "Awesome", Value = 60 },
                { Name = "Bro", Value = 50 },
            }, index.sport, description, {}, true, {
                onListChange = function(Index, Item)
                    index.sport = Index;
                    Visual.Subtitle("onListChange", 100)
                end,
                onSelected = function(Index, Item)
                    Visual.Subtitle("onSelected", 100)
                end,
            })
            -- Muscle Wheels
            RageUI.List('Muscle', {
                { Name = "Paco", Value = 1 },
                { Name = "Is", Value = 2 },
                { Name = "Awesome", Value = 60 },
                { Name = "Bro", Value = 50 },
            }, index.muscle, description, {}, true, {
                onListChange = function(Index, Item)
                    index.muscle = Index;
                    Visual.Subtitle("onListChange", 100)
                end,
                onSelected = function(Index, Item)
                    Visual.Subtitle("onSelected", 100)
                end,
            })
            -- Tuner Wheels
            RageUI.List('Tuner', {
                { Name = "Paco", Value = 1 },
                { Name = "Is", Value = 2 },
                { Name = "Awesome", Value = 60 },
                { Name = "Bro", Value = 50 },
            }, index.tuner, description, {}, true, {
                onListChange = function(Index, Item)
                    index.tuner = Index;
                    Visual.Subtitle("onListChange", 100)
                end,
                onSelected = function(Index, Item)
                    Visual.Subtitle("onSelected", 100)
                end,
            })
            
        end, function() end)

        -- WindowsubMenu
        RageUI.IsVisible(WindowsubMenu, function()
            
            RageUI.Button('None', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleWindowTint(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                end,
            });
            RageUI.Button('Light Smoke', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleWindowTint(GetVehiclePedIsIn(PlayerPedId(), false), 3)
                end,
            });
            RageUI.Button('Dark Smoke', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleWindowTint(GetVehiclePedIsIn(PlayerPedId(), false), 2)
                end,
            });
            RageUI.Button('Limo', nil, {}, true, {
                onSelected = function()
                    SetVehicleModKit(GetVehiclePedIsIn(PlayerPedId(), false), 0)
                    SetVehicleWindowTint(GetVehiclePedIsIn(PlayerPedId(), false), 1)
                end,
            });
            
        end, function() end)

    end
end)


Keys.Register('M', 'M', 'Open RageUI Showcase menu default.', function()
    RageUI.Visible(mainMenu, not RageUI.Visible(mainMenu))
end)
